export default {
  title: 'Projects Management',
  description: ({ count }) => `Oversee and manage all ${count} construction projects.`,
  binTitle: 'Projects Bin',
  binDescription: ({ count }) => `You have ${count} projects in the bin. Restore or delete them permanently.`,
  addProjectButton: 'New Project',
  addFirstProjectButton: 'Add Your First Project',
  searchPlaceholder: 'Search projects...',
  viewBinButton: 'View Bin',
  viewActiveProjects: 'View Active Projects',
  noProjectsFound: 'No Projects Found',
  noProjectsFoundHint: 'Try adjusting your filters or add a new project.',
  noBinnedProjectsFound: 'No Projects in Bin',
  noBinnedProjectsFoundHint: 'Deleted projects will appear here.',
  projectInBin: 'This project is in the bin.',
  projectInBinDescription: 'You can restore it or delete it permanently.',
  deletedTimeAgo: ({ time }) => `Deleted ${time}`,
  filters: {
    title: 'Filters',
    statusPlaceholder: 'Filter by status',
    priorityPlaceholder: 'Filter by priority',
    allStatuses: 'All Statuses',
    allPriorities: 'All Priorities',
  },
  sort: {
    label: 'Sort by',
    nameAsc: 'Name (A-Z)',
    nameDesc: 'Name (Z-A)',
    endDateAsc: 'End Date (Oldest First)',
    endDateDesc: 'End Date (Newest First)',
    priorityDesc: 'Priority (Highest First)',
  },
  card: {
    budget: 'Budget',
    progress: 'Progress',
  },
  form: {
    addTitle: 'Create New Project',
    editTitle: 'Edit Project Details',
    addButton: 'Create Project',
    updateButton: 'Save Changes',
    nameLabel: 'Project Name',
    namePlaceholder: 'e.g., Downtown Tower Construction',
    descriptionLabel: 'Description',
    descriptionPlaceholder: 'Detailed description of the project scope and objectives...',
    startDateLabel: 'Start Date',
    endDateLabel: 'End Date',
    datePlaceholder: 'Pick a date',
    budgetLabel: ({ currency }) => `Budget (${currency})`,
    budgetPlaceholder: 'e.g., 500000',
    statusLabel: 'Status',
    statusPlaceholder: 'Select project status',
    priorityLabel: 'Priority',
    priorityPlaceholder: 'Select project priority',
    assignedTeamLabel: 'Assigned Team',
    assignedTeamPlaceholder: 'Select team members (multi-select)',
    assignedTeamMultiSelectHint: 'Hold Ctrl/Cmd to select multiple team members.',
    locationLabel: 'Location',
    locationPlaceholder: 'e.g., 123 Main St, Cityville',
    typeLabel: 'Project Type',
    typePlaceholder: 'e.g., Residential, Commercial, Infrastructure',
    clientNameLabel: 'Client Name',
    clientNamePlaceholder: 'e.g., Acme Corp',
    completionLabel: 'Completion (%)',
    colorLabel: 'Project Color Tag',
    colorPlaceholder: 'Choose a color',
    colorOptions: {
      gray: 'Gray',
      red: 'Red',
      orange: 'Orange',
      yellow: 'Yellow',
      green: 'Green',
      teal: 'Teal',
      blue: 'Blue',
      indigo: 'Indigo',
      purple: 'Purple',
      pink: 'Pink',
    },
    error: {
      nameRequired: 'Project name is required.',
      startDateRequired: 'Start date is required.',
      endDateRequired: 'End date is required.',
      endDateInvalid: 'End date cannot be before start date.',
      budgetInvalid: 'Budget must be a positive number.',
      locationRequired: 'Location is required.',
      typeRequired: 'Project type is required.',
      validationFailedTitle: 'Validation Error',
      validationFailedDescription: 'Please check the form for errors and try again.',
    },
  },
  deleteDialog: {
    title: 'Move Project to Bin',
    description: ({ projectName }) => `Are you sure you want to move the project "${projectName}" to the bin? You can restore it later.`,
    confirmation: 'This action will mark the project as deleted.',
    permanentDeleteTitle: 'Permanently Delete Project',
    permanentDeleteDescription: ({ projectName }) => `Are you sure you want to permanently delete the project "${projectName}"? This action cannot be undone.`,
    permanentDeleteConfirmation: 'All associated data might be lost.',
    thisProject: 'this project',
  },
  toast: {
    projectMovedToBin: ({ projectName }) => `Project "${projectName}" moved to bin.`,
    projectRestored: ({ projectName }) => `Project "${projectName}" restored.`,
    projectPermanentlyDeleted: ({ projectName }) => `Project "${projectName}" permanently deleted.`,
  },
  statusPlanning: 'Planning',
  statusInProgress: 'In Progress',
  statusCompleted: 'Completed',
  statusOnHold: 'On Hold',
  statusCancelled: 'Cancelled',
};